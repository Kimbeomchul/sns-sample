plugins {
	id 'java'
	id 'org.springframework.boot' version '2.6.7'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'com.github.node-gradle.node' version '3.3.0'
}

group = 'com.mozzi'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	// MYSQL
	implementation 'mysql:mysql-connector-java'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// webflux
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// 임시 h2
	runtimeOnly 'com.h2database:h2:2.1.214'

	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'

	// swagger 추가
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'

	implementation 'org.springframework.boot:spring-boot-starter-jdbc'

	// json
	implementation 'org.json:json:20171018'

	// chat 전용 mongodb reactive, webflux 추가
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-mongodb-reactive
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-mongodb-reactive'

}

tasks.named('test') {
	useJUnitPlatform()
}


node {
	nodeModulesDir = file("$projectDir/front-end")
	version = '18.3.0'
	download = true
}

task npmBuild(type: NpmTask) {
	args = ['run', "build"]
}

task copyFrontEnd(type: Copy) {
	from "$projectDir/front-end/static"
	into 'build/resources/main/static/.'
}

task cleanFrontEnd(type: Delete) {
	delete "$projectDir/front-end/static", "$projectDir/front-end/node_modules"
}

